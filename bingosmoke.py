import random
import time
import telebot
from background import keep_alive
import io
import os

api_key = os.environ['API_KEY']
yuri_id = os.environ['YURI']
mine_id = os.environ['MINE']
nikita_id = os.environ['NIKITA']
serega_id = os.environ['SEREGA']
misha_id = os.environ['MISHA']
group_id = os.environ['GROUP_ID']

bot = telebot.TeleBot(api_key)

cat_commands = ['–∂–∏–¥–∫–∏–π –∫–æ—Ç', '–∂–∏–¥–æ–∫–æ—Ç']
cat2o = {
    'head':
    'CAACAgIAAxkBAAEBe9JlLSQ7DZkard_-QJ5he7Vq1vyeBgACQQADKA9qFPDp0yN1HEZhMAQ',
    'body':
    'CAACAgIAAxkBAAEBe9RlLSQ9DONExbA87UHp9EkLA9Jg6AACNQADKA9qFFJR2Ut3d7AFMAQ',
    'tail':
    'CAACAgIAAxkBAAEBe9ZlLSQ_C-Ln9YpkZjUH5z7iyKKpqQACPwADKA9qFGqgL_9ebv15MAQ'
}

smoke_commands = [
    '–∫—É—Ä–∏—Ç—å', 'smoke', '–ø–µ—Ä–µ–∫—É—Ä', '/smoke', 'üö¨', '–ø–µ—Ä–µ–∫—É—Ä –ø–∞—Ä–Ω–∏',
    '/smoke@bingosmoke_bot', '–¥—É–¥–µ—Ç—å', '—Å–º–æ—É–∫–∞—Ç—å', '–∫—É—Ä—è–∫–∞—Ç—å', '–∫—É—Ä–∏—Ç—è',
    '—É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –Ω–∏–∫–æ—Ç–∏–Ω', '—É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –Ω–∏–∫–∏—Ç–∏–Ω',
    '–ø—É—Å–∫–∞—Ç—å –∫–æ–ª –µ—á–∫–∏ —Å–µ—Ä–æ–≥–æ –¥—ã–º–∞ –≤ —ç—Ç–æ—Ç —Ö–º—É—Ä—ã–π —Å—Ç–∞–ª—å–Ω–æ–π –æ—Å–µ–Ω–Ω–∏–π –¥–µ–Ω—å',
    '–ø—É—Å–∫–∞—Ç—å –∫–æ–ª–µ—á–∫–∏ —Å–µ—Ä–æ–≥–æ –¥—ã–º–∞ –≤ —ç—Ç–æ—Ç —Ö–º—É—Ä—ã–π —Å—Ç–∞–ª—å–Ω–æ–π –æ—Å–µ–Ω–Ω–∏–π –¥–µ–Ω—å',
    '–∫—É—Ä—è–∫–µ–∫–∞—Ç—å', '–∫—É—Ä–∏—Ç–∏—Ç—è', '–ø—Ä–æ–µ–±—ã–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É', '–∫–µ—Ä–∏—Ç—å', '–¥—É–¥–æ–Ω–∏—Ç—å',
    '–∫—É—Ä—å–∏—Ç—å', '–∫—É—Ä–µ–Ω—å–∫–∞—Ç—å', '–¥—É–¥–µ–Ω–∏—Ç—å', '—Å–æ—Å–∞—Ç—å –¥—ã–º',
    '–ø–æ–ª—É—á–∞—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –ø—É—Ç–µ–º –≤–¥—ã—Ö–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏—Å–ø–∞—Ä–µ–Ω–∏—è —á–µ—Ä–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –Ω–∞–≥—Ä–µ–≤–∞ –∂–∏–¥–∫–æ—Å—Ç–∏',
    '—Å–æ—Å–∞—Ç—å', '–∫—É—Ä–∏—Ç—å —Ö–æ—á–µ—Ç—Å—è', '–ø—Ä–æ—ë–±—ã–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É', '–¥—É—Ç—å', '–¥—ã–º–∏—Ç—å',
    '–±–∏–≥—Å–º–æ—É–∫–∞—Ç—å', 'smoking', "smoykat'", '–∑–∞–π—Ç–∏ –ø–æ–¥ —Å–º–æ–∫–æ–º –≤ –ª–æ–≥–æ–≤–æ —Ä–æ—à–∞–Ω–∞',
    '–∫—É—Ä–∏—Ç—å–∫–∞—Ç—å', '–∫—É—Ä–∏–ª–∏—Ç—å', '–∫—É—Ä–∏—Ç—å –ø–∞—Ä–Ω–∏', '–∫—É—Ä–∏–∏–∏–∏—Ç—å', '–∫—É—Ä–∏–∏—Ç—å',
    '–∫—É—Ä–∏–∏–∏—Ç—å', '–¥—ã—à–∞—Ç—å –≤–æ–∑–¥—É—Ö–æ–º', "kyrit'", '–∫—É—Ä–∏—Ç—å —É–º–æ–ª—è—é', '—É–º–æ–ª—è—é –∫—É—Ä–∏—Ç—å',
    '—Å–æ–≤–µ—â–∞–Ω–∏–µ –≤ –∫—É—Ä–∏–ª–∫–µ', '–∫—É—Ä–∏—Ç—å –±–∞–º–±—É–∫', '–∫—É—Ä–∏—è–∫–∏', '—Å–æ—Å–∞—Ç—å —á–∏–ª–µ–µ–µ–Ω',
    '–≥–æ –∫—É—Ä–∏—Ç—å', '—Å–æ—Å–∞—Ç—å —á–ª–µ–Ω', '–∫—É—Ä–∏—Ç—å –Ω–∞—Ö–æ–π', 'rehbnm', '–∫—É—Ä–∏–º', '—Å–æ–≥–ª–∞—Å—É—é',
    '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ', '–ø–∞—Ä–∏—Ç—å', '—Å–æ—Å–∞—Ç—å –¥—ã–º  –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–º–∞', '–¥—ã—à–∞—Ç—å –ø–∞—Ä–æ–º',
    '–∫—É—Ä–∏—Ç—å –∫—É—Ä–∏—Ç—å –∫—É—Ä–∏—Ç—å', '–∂–µ—Å—Ç–∫–æ –¥–∞–≤–∏—Ç—å –∏—Å–ø–∞—Ä–∏–∫ –∫–æ–ø—á–µ–Ω–∏–µ–º',
    '—Å—Ç—Ä–µ–ª—è—Ç—å –¥—É–¥–∫–∏', '–¥—É–¥–æ–Ω—å–∫–∞—Ç—å', '–æ–±—Å–∞—Å—ã–≤–∞—Ç—å –º—É–Ω–¥—à—Ç—É–∫ –Ω–∞ –º–æ—Ä–æ–∑–µ',
    '—á—É—é –ø–æ—Ä–∞ –∫—É—Ä–∏—Ç—å', '—Å—É–∫–∏–Ω —Ç—ã —Å—ã–Ω, —è –≤ –¥–µ–ª–µ', '–∫—É—Ä–∏—Ç—å—å', '–∫—É—Ä–∏—Ç—å —á–∏–ª–µ–µ–µ–Ω',
    '–∂—Ä–∞—Ç—å', '–∫—É—Ä–∏—Ü'
]
no_commands = [
    '–Ω–µ–∫—É—Ä–∏—Ç—å', '–Ω–µ –∫—É—Ä–∏—Ç—å', '–ø—Ä–æ–ø—É—â—É', '–ø—Ä–æ–ø—É—Å—á—É', '–≤–∫—Å', '–Ω–∞ –≤–∫—Å',
    '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç', '–æ–Ω –ø—Ä–æ–ø—É—Å—Ç–∏—Ç', '–Ω–µ –ø–æ–π–¥—É', '–ø—Ä–æ–µ–±—ã–≤–∞—Ç—å –∫—É—Ä–µ–Ω–∏–µ',
    '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É', '–Ω–µ —Å–æ–≥–ª–∞—Å—É—é', '–Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ',
    '–∫—É—à–∞—é', '–∫—É—à–∞–µ—Ç', '–æ–±–µ–¥', '–æ–±—ç–¥', '—Ö–∞–≤–∞—é', '—Å–æ–∑–≤–æ–Ω', '–≤–∫—Å,  5 –º–∏–Ω—É—Ç',
    '–æ–Ω –Ω–∞ –≤–∫—Å', '–≤–æ–∑–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç –∫—É—Ä–µ–Ω–∏—è', '–≤–∫—Å,  10 –º–∏–Ω—É—Ç', '–≤–∫—Å,  15 –º–∏–Ω—É—Ç'
]
home_commands = [
    '–¥–æ–º–æ–π', '–¥–æ–º–∞', '—Å–µ–≥–æ–¥–Ω—è –¥–æ–º–∞', '—Å–æ—Å–∞—Ç—å –¥—ã–º –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–º–∞', '—É—Ö–æ–∂—É',
    '–ª–µ—Ç–µ—Ç—å –Ω–∞ –∫—É—Ä–∏–ª—å–Ω–æ–π —Ç—è–≥–µ –¥–æ–º–æ–π', '—É—à–µ–ª –¥–æ–º–æ–π', '–∫—É—Ä–∏—Ç—å –¥–æ–º–∞',
    '–¥–æ–º–∞ –∫—É—Ä–∏—Ç—å', '—Å–æ—Å–∞—Ç—å –¥–æ–º–∞'
]
waiting_commands = [
    '5 —Å–µ–∫', '5 —Å–µ–∫ –≥–æ–º–æ—Å–µ–∫', '–∂–¥—É', '–≤—ã—Ö–∞–∂—É –æ–∫–æ–ª–æ—Ñ—É—Ç–±–æ–ª–∏—Ç—å',
    '–≤—ã—Ö–æ–∂—É –æ–∫–æ–ª–æ—Ñ—É—Ç–±–æ–ª–∏—Ç—å', '–Ω–∞ —É–ª–∏—Ü–µ', '–æ–∫–æ–ª–æ—Ñ—É—Ç–±–æ–ª–∞', '–æ–∫–æ–ª–æ—Ñ—É—Ç–±–æ–ª',
    '–æ–∫–æ–ª–æ —Ñ—É—Ç–±–æ–ª–∞', '–æ–∫–æ–ª–æ—Ñ—É—Ç–±–æ–ª—é'
]
catchup_commands = ['–¥–æ–≥–æ–Ω—é', '–±–µ–≥—É']
woman_commands = ['—Å—Ç—Ä–µ–ª—è—Ç—å –¥—É–¥–∫–∏', '—Å—Ç—Ä–µ–ª—è—Ç—å']

auf_commands = ['–∞—É—Ñ', '/auf', 'auf', '/–∞—É—Ñ']
aue_commands = ['/aue', '–∞—É–µ', '/–∞—É–µ', '/–∑–∞–≥–∞–¥–∫–∞']

ultimate = [
    '–∫—É—Ä–∏—Ç—å –∂–µ—Å—Ç–∫–æ —Ö–æ—á—É', '–∫—É—Ä–∏—Ç—å —Ö–æ—á—É –∂–µ—Å—Ç–∫–æ', '–∂–µ—Å—Ç–∫–æ –∫—É—Ä–∏—Ç—å —Ö–æ—á—É',
    '—Ö–æ—á—É –∂–µ—Å—Ç–∫–æ –∫—É—Ä–∏—Ç—å', '—Ö–æ—á—É –∫—É—Ä–∏—Ç—å –∂–µ—Å—Ç–∫–æ', '–∫—É—Ä–∏—Ç—å —Ö–æ—á—É –ø–∏–∑–¥–µ—Ü',
    '–ø–∏–∑–¥–µ—Ü –∫—É—Ä–∏—Ç—å —Ö–æ—á–µ—Ç—Å—è', '–ø–∏–∑–¥–µ—Ü –∫—É—Ä–∏—Ç—å —Ö–æ—á—É', '–∫—É—Ä–∏—Ç—å –ø–∏–∑–¥–µ—Ü —Ö–æ—á—É'
]
strong = ['–∂–µ—Å—Ç–∫–æ –∫—É—Ä–∏—Ç—å', '–∫—É—Ä–∏—Ç—å –∂–µ—Å—Ç–∫–æ']

helps = ['help', '/help', '—Ö—ç–ª–ø', '—Ö–µ–ª–ø']
all_commands = smoke_commands + auf_commands + aue_commands + ultimate + strong + no_commands

stickersYu = []
stickersSl = []
stickersCommon = []
stickersNo = []
stickersHome = []
stickersWait = []
stickersCatchup = []
query_one = ''

auf_replies = []
aue_replies = []
poop_replies = ['–ø–∏—Å—è', '–ø–æ–ø–∞', '–∫–∞–∫–∞—â–∫–∏', '—á–∏–ª–µ–µ–µ–Ω']
hook = [
    '@Azaz31', '@vosalaev', '@goodzonix', '@Bogdabvas', '@Laco99',
    '@ZharinoffM', '@IrinaKuz26', '@Lalalarew', '@devil_only9898'
]
ban_list = []

with io.open('inputs.txt', 'r', encoding='UTF-8') as f:
  for line in f.readlines():
    if line[0] == 'y':
      stickersYu.append(line.strip().split(' ')[1])
    elif line[0] == 's':
      stickersSl.append(line.strip().split(' ')[1])
    elif line[0] == 'a':
      auf_replies.append(line[2:])
    elif line[0] == 'r':
      aue_replies.append(line[2:].replace('–û—Ç–≤–µ—Ç', '\n–û—Ç–≤–µ—Ç'))
    elif line[0] == 'e':
      stickersCommon.append(line.strip().split(' ')[1])
    elif line[0] == 'n':
      stickersNo.append(line.strip().split(' ')[1])
    elif line[0] == 'h':
      stickersHome.append(line.strip().split(' ')[1])
    elif line[0] == 'w':
      stickersWait.append(line.strip().split(' ')[1])
    elif line[0] == 'c':
      stickersCatchup.append(line.strip().split(' ')[1])

with io.open('queries.txt', 'r', encoding='UTF-8') as f:
  for line in f.readlines():
    if line[0] == '1':
      query_one += line[2:]

with io.open('ban_file.txt', 'r', encoding='UTF-8') as f:
  for line in f.readlines():
      ban_list += str(line)

stickers = {mine_id: stickersSl, yuri_id: stickersYu}
replies = {'aue': aue_replies, 'auf': auf_replies, 'poop': poop_replies}


def send_sticker(chat_id, user_id, msg_id):
  try:
    bot.send_sticker(chat_id,
                     random.choice(stickers.get(user_id)),
                     reply_to_message_id=msg_id,
                     disable_notification=True)
  except TypeError:
    bot.send_sticker(chat_id,
                     random.choice(stickersCommon),
                     reply_to_message_id=msg_id,
                     disable_notification=True)


def send_message(msg_type, chat_id, msg_id):
  bot.send_message(chat_id,
                   text=random.choice(replies.get(msg_type)),
                   reply_to_message_id=msg_id,
                   disable_notification=True)


def get_photo(msg):
  photo = msg.photo[-1]
  file_id = photo.file_id
  file = bot.get_file(file_id)
  downloaded_file = bot.download_file(file.file_path)
  with open("downloaded_photo.jpg", "wb") as file:
    file.write(downloaded_file)


@bot.message_handler(content_types=['text', 'photo'])
def message_replier(message):
  current_time = int(time.time())
  msg_time = message.date
  user_id = str(message.from_user.id)

  if current_time - msg_time < 120 and message.content_type == 'text':
    if '–±–∞–Ω' in message.text and user_id == mine_id:
      ban = message.text.replace('–±–∞–Ω ', '')
      if ban.lower() == '—é—Ä–∞':
        ban_list.append(yuri_id)
      elif ban.lower() == '—Å–ª–∞–≤–∞':
        ban_list.append(mine_id)
      elif ban.lower() == '–Ω–∏–∫–∏—Ç–∞':
        ban_list.append(nikita_id)
      elif ban.lower() in ['—Å–µ—Ä–µ–≥–∞', '—Å–µ—Ä—ë–≥–∞']:
        ban_list.append(serega_id)
      elif ban.lower() == '–º–∏—à–∞':
        ban_list.append(misha_id)
      with io.open('ban_file.txt', 'w', encoding='UTF-8') as f:
        for ban_id in ban_list:
          f.write(str(ban_id) + '\n')
      bot.send_message(mine_id, text=f'{ban} –ó–ê–ë–ê–ù–ï–ù')
      return
    if '–ø—Ä–æ—Å—Ç–∏' in message.text and user_id == mine_id:
      ban = message.text.replace('–ø—Ä–æ—Å—Ç–∏ ', '')
      if ban.lower() == '—é—Ä–∞':
        ban_list.remove(yuri_id)
      elif ban.lower() == '—Å–ª–∞–≤–∞':
        ban_list.remove(mine_id)
      elif ban.lower() == '–Ω–∏–∫–∏—Ç–∞':
        ban_list.remove(nikita_id)
      elif ban.lower() in ['—Å–µ—Ä–µ–≥–∞', '—Å–µ—Ä—ë–≥–∞']:
        ban_list.remove(serega_id)
      elif ban.lower() == '–º–∏—à–∞':
        ban_list.remove(misha_id)
      with io.open('ban_file.txt', 'w', encoding='UTF-8') as f:
        for ban_id in ban_list:
          f.write(str(ban_id) + '\n')
      bot.send_message(mine_id, text=f'{ban} —Ä–∞–∑–±–∞–Ω–µ–Ω')
      return
    if message.text.lower() in all_commands and random.randint(0, 100) >= 95:
      send_message('poop', message.chat.id, message.message_id)
      return
    if '–±–æ—Ç –æ—Ç–ø—Ä–∞–≤—å' in message.text and user_id == mine_id:
      bot.send_message(group_id, text=message.text.replace('–±–æ—Ç –æ—Ç–ø—Ä–∞–≤—å', ''))

    if message.text.lower() == '–æ—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä' and user_id == mine_id:
      bot.send_sticker(group_id,
                       random.choice(stickersCommon),
                       disable_notification=True)
    if user_id in ban_list:
      bot.send_message(message.chat.id,
                       text='–¢–´ –ó–ê–ë–ê–ù–ï–ù',
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
      return
    if message.text.lower(
    ) in smoke_commands or '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ' in message.text.lower():
      send_sticker(chat_id=message.chat.id,
                   user_id=user_id,
                   msg_id=message.message_id)

    elif message.text.lower() in helps:
      all_commands_str = '\n'.join(smoke_commands)
      bot.send_message(message.chat.id,
                       text=f'–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥:\n{all_commands_str}',
                       reply_to_message_id=message.message_id,
                       disable_notification=True)

    elif message.text.lower() in cat_commands:
      if user_id == mine_id:
        k = 0
      elif user_id == yuri_id:
        k = 6
      else:
        k = random.randint(0, 5)
      bot.send_sticker(message.chat.id,
                       cat2o.get('head'),
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
      for i in range(k):
        bot.send_sticker(message.chat.id,
                         cat2o.get('body'),
                         disable_notification=True)
      bot.send_sticker(message.chat.id,
                       cat2o.get('tail'),
                       disable_notification=True)

    elif message.text.lower() in aue_commands:
      send_message('aue', message.chat.id, message.message_id)

    elif message.text.lower() in auf_commands:
      send_message('auf', message.chat.id, message.message_id)

    elif message.text.lower() in ultimate:
      for k in range(4):
        bot.send_sticker(message.chat.id,
                         random.choice(stickersCommon + stickersYu +
                                       stickersSl),
                         reply_to_message_id=message.message_id,
                         disable_notification=True)
    elif message.text.lower() in strong:
      for k in range(2):
        bot.send_sticker(message.chat.id,
                         random.choice(stickersCommon + stickersYu +
                                       stickersSl),
                         reply_to_message_id=message.message_id,
                         disable_notification=True)
    elif message.text.lower() == '–ø—É–¥–∂' or message.text.lower() == '–ø–µ—Ä–µ–ø—É–¥–∂':
      if random.randint(0, 100) >= 98:
        pudge = '–ø—É–¥–∂ —Ö—É–∫–∞–µ—Ç ' + '@' + message.from_user.username + ' –ò –ù–ê–ß–ò–ù–ê–ï–¢ –ï–ì–û –ñ–†–ê–¢–¨.\n–¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –∏–¥—Ç–∏ –∫—É—Ä–∏—Ç—å –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–µ–±—è –°–û–ñ–†–ê–õ–ò'
      else:
        pudge = '–ø—É–¥–∂ —Ö—É–∫–∞–µ—Ç ' + random.choice(
            hook
        ) + ' –∞–≤—Ö–∞–∑–≤–∞—Ö–≤—Ö–∞—Ö —á–∏–Ω—á–æ–ø–∞ —á–∏–Ω—á–æ–ø–∞\n–¢–µ–ø–µ—Ä—å —Ç—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å –¥–≤–µ—Ä—å –ø—Ä–æ–ø—É—Å–∫–æ–º'
      bot.send_message(message.chat.id,
                       text=pudge,
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
      bot.send_video(
          message.chat.id,
          'https://tenor.com/ru/view/pudge-–ø—É–¥–∂-–≤–∏–ª—è–µ—Ç–ø–æ–ø–æ–π-–≤–∏–ª—è–µ—Ç-–¥–æ—Ç–∞-gif-27008808',
          None,
          disable_notification=True)

    elif message.text.lower() in no_commands:
      bot.send_sticker(message.chat.id,
                       random.choice(stickersNo),
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
    elif message.text.lower() in home_commands:
      bot.send_sticker(message.chat.id,
                       random.choice(stickersHome),
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
    elif message.text.lower() in waiting_commands:
      bot.send_sticker(message.chat.id,
                       random.choice(stickersWait),
                       reply_to_message_id=message.message_id,
                       disable_notification=True)
    elif message.text.lower() in catchup_commands:
      bot.send_sticker(message.chat.id,
                       random.choice(stickersCatchup),
                       reply_to_message_id=message.message_id,
                       disable_notification=True)


keep_alive()
#bot.polling(none_stop=True, interval=0)
bot.infinity_polling()
